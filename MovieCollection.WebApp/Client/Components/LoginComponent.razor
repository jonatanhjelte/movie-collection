@using MovieCollection.WebApp.Shared.Requests

<MudPaper Class="pa-4 mr-5">
    <MudForm @ref="form">
            <MudTextField T="string" @bind-Text="userName" Label="Username" RequiredError="Username is required" Required="true"/>
            <MudTextField T="string" id="password" InputType="InputType.Password" @bind-Text="password" Label="Password" RequiredError="Password is required" Required="true"/>
    </MudForm>   
    <MudButton Class="mt-5" OnClick="Login" Variant="Variant.Filled" Color="Color.Primary" DisableElevation="true">Login</MudButton>
    @if (!string.IsNullOrWhiteSpace(ErrorMessage))
    {
        <MudAlert Severity="Severity.Error">@(ErrorMessage)</MudAlert>    
    }
    <MudText Class="mt-4">Not a member yet? <MudLink Href="CreateAccount">Click here to create account</MudLink></MudText>
</MudPaper>

@code 
{
    [Parameter]
    public EventCallback<LoginRequest> OnLogin { get; set; }
    [Parameter]
    public string ErrorMessage { get; set; } = string.Empty;
    [Parameter]
    public EventCallback OnTextChanged { get; set; }

    private MudForm form = new MudForm();
    private string userName
    {
        get
        {
            return _userName;
        }
        set
        {
            _userName = value;
            OnTextChanged.InvokeAsync();
        }
    }
    private string _userName = string.Empty;

    private string password
    {
        get
        {
            return _password;
        }
        set
        {
            _password = value;
            OnTextChanged.InvokeAsync();
        }
    }
    private string _password = string.Empty;
    private void Login()
    {
        form.Validate();

        if (form.IsValid)
        {
            OnLogin.InvokeAsync(new LoginRequest() { UserName = userName, Password = password });      
        }
    }
}
